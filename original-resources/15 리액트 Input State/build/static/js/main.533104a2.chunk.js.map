{"version":3,"sources":["Ex04.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Ex04a","props","changeFunction","e","setState","current","inputChange","target","value","state","style","border","this","onChange","React","Component","Ex04b","changeInputsFunction","name","inputs","input1","input2","input3","input4","Ex04c","changeTextareaFunction","textareaValue","width","height","resize","outline","Ex04","App","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAGMA,E,kDACJ,WAAYC,GAAU,IAAD,8BACnB,cAAMA,IAMRC,eAAiB,SAACC,GAChB,EAAKC,UAAS,SAAAC,GAAO,kCAChBA,GADgB,IAEnBC,YAAcH,EAAEI,OAAOC,YARzB,EAAKC,MAAQ,CACXH,YAAc,qEAHG,E,0CAerB,WACE,OACE,qCACE,uBAAOI,MAAO,CAACC,OAAO,kBAAmBH,MAAM,sEAC/C,uBAAOA,MAAOI,KAAKH,MAAMH,YAAaO,SAAUD,KAAKV,wB,GApBzCY,IAAMC,WAqCpBC,E,kDACJ,WAAYf,GAAU,IAAD,8BACnB,cAAMA,IAWRgB,qBAAuB,SAACd,GAA2C,IAAD,EAC3CA,EAAEI,OAAhBW,EADyD,EACzDA,KAAKV,EADoD,EACpDA,MACZ,EAAKJ,UAAS,SAAAC,GAAO,kCAChBA,GADgB,IAEnBc,OAAM,2BACDd,EAAQc,QADP,kBAEHD,EAAQV,UAhBb,EAAKC,MAAQ,CACXU,OAAS,CACPC,OAAS,4CACTC,OAAS,4CACTC,OAAS,4CACTC,OAAS,8CAPM,E,0CAwBrB,WACE,OACE,qCACE,uBAAOL,KAAK,SAASV,MAAOI,KAAKH,MAAMU,OAAOC,OAAQP,SAAUD,KAAKK,uBACrE,uBAAOC,KAAK,SAASV,MAAOI,KAAKH,MAAMU,OAAOE,OAAQR,SAAUD,KAAKK,uBACrE,uBAAOC,KAAK,SAASV,MAAOI,KAAKH,MAAMU,OAAOG,OAAQT,SAAUD,KAAKK,uBACrE,uBAAOC,KAAK,SAASV,MAAOI,KAAKH,MAAMU,OAAOI,OAAQV,SAAUD,KAAKK,8B,GA/BzDH,IAAMC,WA2CpBS,E,kDACJ,WAAYvB,GAAU,IAAD,8BACnB,cAAMA,IAMRwB,uBAAyB,SAACtB,GACxB,EAAKC,UAAS,SAAAC,GAAO,kCAChBA,GADgB,IAEnBqB,cAAgBvB,EAAEI,OAAOC,YAR3B,EAAKC,MAAQ,CACXiB,cAAgB,sTAHC,E,0CAerB,WACE,OACE,mCACE,0BAAUlB,MAAOI,KAAKH,MAAMiB,cAAeb,SAAUD,KAAKa,uBAAwBf,MAAO,CAACiB,MAAM,QAAQC,OAAO,QAAQC,OAAO,OAAOC,QAAQ,gB,GAnBjIhB,IAAMC,WAwCXgB,MAbf,WACE,OACE,qCACE,cAAC,EAAD,IACA,4HACA,cAAC,EAAD,IACA,mHACA,cAAC,EAAD,QCzGSC,MARf,WACE,OACE,qBAAKtB,MAAO,CAACuB,QAAS,QAAtB,SACE,cAAC,EAAD,OCOSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.533104a2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nclass Ex04a extends React.Component<{},{inputChange:string}>{\r\n  constructor(props:{}){\r\n    super(props);\r\n    this.state = {\r\n      inputChange : '이 값은 바꿀 수 있습니다.',\r\n    }\r\n  }\r\n\r\n  changeFunction = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState(current => ({\r\n      ...current,\r\n      inputChange : e.target.value\r\n    }))\r\n  }\r\n\r\n\r\n  render(){\r\n    return(\r\n      <>\r\n        <input style={{border:'1px solid #333'}} value=\"이 값은 바꿀 수 없습니다.\"/>\r\n        <input value={this.state.inputChange} onChange={this.changeFunction} />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\ninterface inputsType {\r\n  input1 : string,\r\n  input2 : string,\r\n  input3 : string,\r\n  input4 : string,\r\n}\r\n\r\nclass Ex04b extends React.Component<{},{inputs:inputsType}>{\r\n  constructor(props:{}){\r\n    super(props);\r\n    this.state = {\r\n      inputs : {\r\n        input1 : '바꿀 수 있는 값 1',\r\n        input2 : '바꿀 수 있는 값 2',\r\n        input3 : '바꿀 수 있는 값 3',\r\n        input4 : '바꿀 수 있는 값 4'\r\n      }\r\n    }\r\n  }\r\n\r\n  changeInputsFunction = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n    const {name,value} = e.target;\r\n    this.setState(current => ({\r\n      ...current,\r\n      inputs : {\r\n        ...current.inputs,\r\n        [name] : value\r\n      }\r\n    }))\r\n  }\r\n\r\n\r\n  render(){\r\n    return(\r\n      <>\r\n        <input name=\"input1\" value={this.state.inputs.input1} onChange={this.changeInputsFunction}/>\r\n        <input name=\"input2\" value={this.state.inputs.input2} onChange={this.changeInputsFunction}/>\r\n        <input name=\"input3\" value={this.state.inputs.input3} onChange={this.changeInputsFunction}/>\r\n        <input name=\"input4\" value={this.state.inputs.input4} onChange={this.changeInputsFunction}/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\ninterface HTMLTextAreaElement {\r\n  value:string\r\n}\r\n\r\n\r\nclass Ex04c extends React.Component<{},{textareaValue:string}>{\r\n  constructor(props:{}){\r\n    super(props);\r\n    this.state = {\r\n      textareaValue : '여기는 긴 문장으로써 텍스트 에어리어를 채우게 되며 이렇게 길게 쓴 것을 스테이트로 연결하면 값을 바꿀 수 있습니다. '\r\n    }\r\n  }\r\n\r\n  changeTextareaFunction = (e:React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    this.setState(current => ({\r\n      ...current,\r\n      textareaValue : e.target.value\r\n    }))\r\n  }\r\n\r\n\r\n  render(){\r\n    return(\r\n      <>\r\n        <textarea value={this.state.textareaValue} onChange={this.changeTextareaFunction} style={{width:'177px',height:'200px',resize:'none',outline:'none'}} />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction Ex04(){\r\n  return(\r\n    <>\r\n      <Ex04a />\r\n      <h4>여러 개의 값을 바꿀 수도 있습니다.</h4>\r\n      <Ex04b />\r\n      <h4>다음은 텍스트 에어리어입니다.</h4>\r\n      <Ex04c />\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default Ex04;\r\n","import React from 'react';\n\nimport Ex04 from './Ex04';\n\nfunction App() {\n  return (\n    <div style={{padding: '50px'}}>\n      <Ex04 />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}